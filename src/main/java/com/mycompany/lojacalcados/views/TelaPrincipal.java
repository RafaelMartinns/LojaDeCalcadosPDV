/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.lojacalcados.views;

import com.mycompany.lojacalcados.dao.ClienteDAO;
import com.mycompany.lojacalcados.dao.ProdutoDAO;
import com.mycompany.lojacalcados.dao.ProdutoTamanhoDAO;
import com.mycompany.lojacalcados.dao.RelatorioAnaliticoDAO;
import com.mycompany.lojacalcados.dao.RelatorioSinteticoDAO;
import com.mycompany.lojacalcados.dao.VendaDAO;
import com.mycompany.lojacalcados.dao.VendaItemDAO;
import com.mycompany.lojacalcados.models.Cliente;
import com.mycompany.lojacalcados.models.Produto;
import com.mycompany.lojacalcados.models.ProdutoTamanho;
import com.mycompany.lojacalcados.models.Venda;
import com.mycompany.lojacalcados.models.RelatorioSintetico;
import com.mycompany.lojacalcados.models.RelatorioAnalitico;
import com.mycompany.lojacalcados.models.VendaItem;
import com.mycompany.lojacalcados.utils.Validador;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.awt.event.WindowEvent;
import java.util.Calendar;

/**
 *
 * @author felip
 */
public class TelaPrincipal extends javax.swing.JFrame {
        
    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
        
         DefaultTableModel modeloTabela = (DefaultTableModel) tblItensVenda.getModel();
         modeloTabela.setRowCount(0);
         
        LocalDate hoje = LocalDate.now();
        LocalDate primeiroDiaDoMes = hoje.withDayOfMonth(1);
        Date dataPrimeiroDia = Date.from(primeiroDiaDoMes.atStartOfDay(ZoneId.systemDefault()).toInstant());
        Date dataHoje = Date.from(hoje.atStartOfDay(ZoneId.systemDefault()).toInstant());
        
        jdcDataInicioRelatorio.setDate(dataPrimeiroDia);
        jdcDataFinalRelatorio.setDate(dataHoje);


          cbmTamanhos.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                
                if(cbmTamanhos.getSelectedIndex() < 0)
                    return;
                
                int selectedItem = Integer.parseInt(cbmTamanhos.getSelectedItem().toString());
                
                int fkProduto = Integer.parseInt(txtProdutoAdicionado.getText());
                var produtoTamanho = ProdutoTamanhoDAO.consultarByProdutoETamanho(fkProduto, selectedItem);
                txtQtdDisponivel.setText(String.valueOf(produtoTamanho.getQuantidade()));

            }
        });
          
          this.dlgProdutoTamanho.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                cbmTamanhos.removeAllItems();
                dlgProdutoTamanho.setVisible(false);
            }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgProdutoTamanho = new javax.swing.JDialog();
        txtProdutoAdicionado = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        spnQtdProdutoTamanho = new javax.swing.JSpinner();
        btnCancelarProdutoTamanho = new javax.swing.JButton();
        btnAdicionarProdutoTamanho = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cbmTamanhos = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtQtdDisponivel = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlVenda = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCPF = new javax.swing.JFormattedTextField();
        btnBuscarCPF = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnAdicionarProduto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItensVenda = new javax.swing.JTable();
        btnExcluir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblValorTotal = new javax.swing.JLabel();
        btnConfirmar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnCarregarProdutos = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtIdCliente = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtNomeProduto = new javax.swing.JTextField();
        spnIdProduto = new javax.swing.JSpinner();
        pnlRelatorio = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnProcurar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVendas = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblItensRelatorioAnalitico = new javax.swing.JTable();
        btnDetalhar = new javax.swing.JButton();
        jdcDataInicioRelatorio = new com.toedter.calendar.JDateChooser();
        jdcDataFinalRelatorio = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        lblTotalVendas = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuProdutos = new javax.swing.JMenu();
        jMenuCadastrarProduto = new javax.swing.JMenuItem();
        jMenuClients = new javax.swing.JMenu();
        jMenuCadastrarCliente = new javax.swing.JMenuItem();
        jMenuSair = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        txtProdutoAdicionado.setEnabled(false);
        txtProdutoAdicionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProdutoAdicionadoActionPerformed(evt);
            }
        });

        jLabel10.setText("Tamanho:");

        jLabel11.setText("Qtd Comprada:");

        spnQtdProdutoTamanho.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        btnCancelarProdutoTamanho.setText("Cancelar");
        btnCancelarProdutoTamanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarProdutoTamanhoActionPerformed(evt);
            }
        });

        btnAdicionarProdutoTamanho.setText("Adicionar");
        btnAdicionarProdutoTamanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarProdutoTamanhoActionPerformed(evt);
            }
        });

        jLabel12.setText("Cód. Produto:");

        jLabel13.setText("Qtd: Disponível");

        txtQtdDisponivel.setEnabled(false);
        txtQtdDisponivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtdDisponivelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgProdutoTamanhoLayout = new javax.swing.GroupLayout(dlgProdutoTamanho.getContentPane());
        dlgProdutoTamanho.getContentPane().setLayout(dlgProdutoTamanhoLayout);
        dlgProdutoTamanhoLayout.setHorizontalGroup(
            dlgProdutoTamanhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgProdutoTamanhoLayout.createSequentialGroup()
                .addGroup(dlgProdutoTamanhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgProdutoTamanhoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spnQtdProdutoTamanho, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                        .addGap(216, 216, 216))
                    .addGroup(dlgProdutoTamanhoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(dlgProdutoTamanhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12))
                        .addGap(22, 22, 22)
                        .addGroup(dlgProdutoTamanhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dlgProdutoTamanhoLayout.createSequentialGroup()
                                .addComponent(cbmTamanhos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQtdDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtProdutoAdicionado)))
                    .addGroup(dlgProdutoTamanhoLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(btnCancelarProdutoTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdicionarProdutoTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)))
                .addContainerGap())
        );
        dlgProdutoTamanhoLayout.setVerticalGroup(
            dlgProdutoTamanhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgProdutoTamanhoLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(dlgProdutoTamanhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtProdutoAdicionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dlgProdutoTamanhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13)
                    .addComponent(cbmTamanhos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQtdDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dlgProdutoTamanhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(spnQtdProdutoTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(dlgProdutoTamanhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarProdutoTamanho)
                    .addComponent(btnAdicionarProdutoTamanho))
                .addGap(21, 21, 21))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("CPF:");

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPFActionPerformed(evt);
            }
        });

        btnBuscarCPF.setText("Buscar Cliente");
        btnBuscarCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCPFActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome: ");

        txtNomeCliente.setEnabled(false);
        txtNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeClienteActionPerformed(evt);
            }
        });

        jLabel3.setText("Id Prod.");

        btnAdicionarProduto.setText("Adicionar");
        btnAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarProdutoActionPerformed(evt);
            }
        });

        tblItensVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id Prod", "Nome", "Tamanho", "Qtd", "Vl. Unit", "Vl. Tot"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblItensVenda);

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jLabel5.setText("Valor Total: R$");

        lblValorTotal.setBackground(new java.awt.Color(255, 255, 255));

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnCarregarProdutos.setText("Buscar Produto");
        btnCarregarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarProdutosActionPerformed(evt);
            }
        });

        jLabel4.setText("Id:");

        txtIdCliente.setEnabled(false);
        txtIdCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdClienteActionPerformed(evt);
            }
        });

        jLabel9.setText("Nome:");

        txtNomeProduto.setEnabled(false);
        txtNomeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeProdutoActionPerformed(evt);
            }
        });

        spnIdProduto.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        javax.swing.GroupLayout pnlVendaLayout = new javax.swing.GroupLayout(pnlVenda);
        pnlVenda.setLayout(pnlVendaLayout);
        pnlVendaLayout.setHorizontalGroup(
            pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVendaLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlVendaLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(229, 229, 229)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlVendaLayout.createSequentialGroup()
                        .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlVendaLayout.createSequentialGroup()
                                .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlVendaLayout.createSequentialGroup()
                                        .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2))
                                        .addGap(18, 18, 18)
                                        .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(pnlVendaLayout.createSequentialGroup()
                                                .addComponent(spnIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18))
                                    .addGroup(pnlVendaLayout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlVendaLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtIdCliente))
                                    .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnCarregarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnBuscarCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(btnAdicionarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        pnlVendaLayout.setVerticalGroup(
            pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVendaLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarCPF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(btnCarregarProdutos)
                    .addComponent(jLabel9)
                    .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlVendaLayout.createSequentialGroup()
                        .addComponent(btnAdicionarProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluir)))
                .addGap(18, 18, 18)
                .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblValorTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnConfirmar)
                        .addComponent(btnCancelar)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Vendas", pnlVenda);

        jLabel6.setText("Data Inicial:");

        jLabel7.setText("Data Final:");

        btnProcurar.setText("Procurar");
        btnProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarActionPerformed(evt);
            }
        });

        tblVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Cliente", "Dt Pedido", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblVendas);

        tblItensRelatorioAnalitico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Produto", "Tamanho", "Qtd", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblItensRelatorioAnalitico);

        btnDetalhar.setText("Detalhar");
        btnDetalhar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetalharActionPerformed(evt);
            }
        });

        jLabel8.setText("Total: R$");

        javax.swing.GroupLayout pnlRelatorioLayout = new javax.swing.GroupLayout(pnlRelatorio);
        pnlRelatorio.setLayout(pnlRelatorioLayout);
        pnlRelatorioLayout.setHorizontalGroup(
            pnlRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRelatorioLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRelatorioLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTotalVendas))
                    .addGroup(pnlRelatorioLayout.createSequentialGroup()
                        .addGroup(pnlRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlRelatorioLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdcDataInicioRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdcDataFinalRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDetalhar)
                            .addComponent(btnProcurar))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        pnlRelatorioLayout.setVerticalGroup(
            pnlRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRelatorioLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addGroup(pnlRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jdcDataInicioRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jdcDataFinalRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnProcurar)))
                .addGap(18, 18, 18)
                .addGroup(pnlRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDetalhar))
                .addGap(24, 24, 24)
                .addGroup(pnlRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblTotalVendas))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Relatórios", pnlRelatorio);

        jMenu1.setText("Gerenciar");

        jMenuProdutos.setText("Produtos");

        jMenuCadastrarProduto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        jMenuCadastrarProduto.setText("Cadastrar");
        jMenuCadastrarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCadastrarProdutoActionPerformed(evt);
            }
        });
        jMenuProdutos.add(jMenuCadastrarProduto);

        jMenu1.add(jMenuProdutos);

        jMenuClients.setText("Clientes");

        jMenuCadastrarCliente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        jMenuCadastrarCliente.setText("Cadastrar");
        jMenuCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCadastrarClienteActionPerformed(evt);
            }
        });
        jMenuClients.add(jMenuCadastrarCliente);

        jMenu1.add(jMenuClients);

        jMenuSair.setText("Sair");
        jMenuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSairActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuSair);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ajuda");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCPFActionPerformed

    private void txtNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeClienteActionPerformed

    private void btnAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarProdutoActionPerformed
        
        if(dlgProdutoTamanho.isVisible())
            return;
        
        if(txtIdCliente.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Necessário informar o CPF do cliente antes");
            return;
        }
        
        if(Integer.parseInt(spnIdProduto.getValue().toString()) <= 0){
            JOptionPane.showMessageDialog(rootPane, "Necessário informar o Id do produto antes");
            return; 
        }
        
        var lista =  ProdutoTamanhoDAO.consultarByProduto(Integer.parseInt(spnIdProduto.getValue().toString()));
        
        if(lista == null || lista.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Não há tamanhos disponíveis para esse produto");
            return;
        }
    
        dlgProdutoTamanho.setVisible(true);
        dlgProdutoTamanho.setSize(400, 230);

        txtProdutoAdicionado.setText(spnIdProduto.getValue().toString());
        
        for (ProdutoTamanho item : lista)
        {
            cbmTamanhos.addItem(String.valueOf(item.getTamanho()));
        }
        
      
        txtQtdDisponivel.setText(String.valueOf(lista.get(0).getQuantidade()));
            
    }//GEN-LAST:event_btnAdicionarProdutoActionPerformed

    private void btnBuscarCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCPFActionPerformed
       String cpf = txtCPF.getText();
       
        Cliente cliente = ClienteDAO.consultarByCpf(cpf);
        
        if(cliente == null)
            JOptionPane.showMessageDialog(rootPane, "Cliente não encontrado");
        else{
            txtIdCliente.setText(String.valueOf(cliente.getId()));
            txtNomeCliente.setText(cliente.getNome());
        }
    }//GEN-LAST:event_btnBuscarCPFActionPerformed

    private void btnProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarActionPerformed
        Date inicio = jdcDataInicioRelatorio.getDate();
        Date fim = jdcDataFinalRelatorio.getDate();
        
        if(inicio == null)
        {
            JOptionPane.showMessageDialog(rootPane, "A data inicial é obrigatória");
            return;
        }
        
        if(fim == null)
        {
            JOptionPane.showMessageDialog(rootPane, "A data final é obrigatória");
            return;
        }
        
        if(inicio.getTime() > fim.getTime())
        {
            JOptionPane.showMessageDialog(rootPane, "A data inicial não pode ser maior do que a data final");
            return;
        }
        
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(fim);
        calendar.add(Calendar.DAY_OF_MONTH, 1);
        fim = calendar.getTime();
        
        var retornoVendas = RelatorioSinteticoDAO.listarPorPeriodo(inicio, fim);
        
        if(retornoVendas == null || retornoVendas.isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "Não há vendas registradas nesse período");
            return;
        }
        
       
        
        DefaultTableModel modeloTabela = (DefaultTableModel) tblVendas.getModel();
        
        modeloTabela.setRowCount(0);
         SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        
        double totalVendas = 0;
         
        for (RelatorioSintetico item : retornoVendas)
        {
            totalVendas += item.getVlFinal();
            modeloTabela.addRow(new String[]{
                String.valueOf(item.getIdVenda()),
                item.getNomeCliente(),               
                formatter.format(item.getDhPedido()),
                String.valueOf(item.getVlFinal())
            });
        }
        
        lblTotalVendas.setText(setCasasDecimais(totalVendas));
    }//GEN-LAST:event_btnProcurarActionPerformed

    private void jMenuCadastrarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCadastrarProdutoActionPerformed
       TelaProdutos telaProdutos = new TelaProdutos();
       telaProdutos.setVisible(true);
    }//GEN-LAST:event_jMenuCadastrarProdutoActionPerformed

    private void jMenuCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCadastrarClienteActionPerformed
       TelaClientes telaClientes = new TelaClientes();
       telaClientes.setVisible(true);
    }//GEN-LAST:event_jMenuCadastrarClienteActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void jMenuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuSairActionPerformed

    private void txtProdutoAdicionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProdutoAdicionadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProdutoAdicionadoActionPerformed

    private void btnCancelarProdutoTamanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarProdutoTamanhoActionPerformed
        cbmTamanhos.removeAllItems();
        dlgProdutoTamanho.setVisible(false);
    }//GEN-LAST:event_btnCancelarProdutoTamanhoActionPerformed

    private void btnAdicionarProdutoTamanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarProdutoTamanhoActionPerformed
        try {
            Validador.validarSpinner(spnQtdProdutoTamanho);            
        
            DefaultTableModel modeloTabela = (DefaultTableModel) tblItensVenda.getModel();
            
            String idProduto = txtProdutoAdicionado.getText();
            String nome = txtNomeProduto.getText();
            String tamanho = cbmTamanhos.getSelectedItem().toString();
            String qtd = String.valueOf(spnQtdProdutoTamanho.getValue());  
            
            if(Integer.parseInt(spnQtdProdutoTamanho.getValue().toString()) > Integer.parseInt(txtQtdDisponivel.getText()))
            {
                JOptionPane.showMessageDialog(this, "A quantidade inserida para compra é maior do que a disponível");
                return;
            }
            
            var produto = ProdutoDAO.consultarById(Integer.parseInt(idProduto));
            
            String vlItens = setCasasDecimais(produto.getPreco() * Integer.parseInt(qtd));
            
            modeloTabela.addRow(new String[]{
                idProduto,
                nome,
                tamanho,                
                qtd,
                String.valueOf(produto.getPreco()),
                vlItens
            });
            
            cbmTamanhos.removeAllItems();
            dlgProdutoTamanho.setVisible(false);
            spnQtdProdutoTamanho.setValue(1);
            
            calculoVlFinal();
        }
        catch(Exception ex)
        {
           JOptionPane.showMessageDialog(this, ex.getMessage());
            //objValidar.setBackground(Color.yellow);
        }
    }//GEN-LAST:event_btnAdicionarProdutoTamanhoActionPerformed

    private void btnCarregarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarProdutosActionPerformed
        
        int idProduto = Integer.parseInt(spnIdProduto.getValue().toString());
        
        Produto produto = ProdutoDAO.consultarById(idProduto);
        
        if(produto == null){
            JOptionPane.showMessageDialog(rootPane, "Id do produto inválido. Tente novamente");
            return;
        }
        
        txtNomeProduto.setText(produto.getNome());
        
    }//GEN-LAST:event_btnCarregarProdutosActionPerformed

    private void txtIdClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdClienteActionPerformed

    private void txtNomeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeProdutoActionPerformed

    private void txtQtdDisponivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtdDisponivelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtdDisponivelActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linhaSelecionada = tblItensVenda.getSelectedRow();
        
        if(linhaSelecionada >= 0){          
            DefaultTableModel modeloTabela = (DefaultTableModel) tblItensVenda.getModel();
            modeloTabela.removeRow(linhaSelecionada);
            calculoVlFinal();
        }else{
            JOptionPane.showMessageDialog(rootPane, "Nenhum registro foi selecionado");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
       DefaultTableModel modeloTabela = (DefaultTableModel) tblItensVenda.getModel();
       
       if(modeloTabela.getRowCount() == 0){
           JOptionPane.showMessageDialog(rootPane, "Necessário adicionar itens a venda");
           return;
       }

       try{
            //gerar a venda
            int fkCliente = Integer.parseInt(txtIdCliente.getText());
            double vlFinal = Double.parseDouble(lblValorTotal.getText());
            LocalDateTime dhNow = LocalDateTime.now();
           
            Venda venda = new Venda(fkCliente, vlFinal, dhNow);
           
            int idVendaGerado = VendaDAO.adicionar(venda);
            
            if(idVendaGerado <= 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Falha ao gerar a venda. Tente novamente.");
                return;
            }
           
            ArrayList<VendaItem> itensVenda = new ArrayList<>();
            
            
            for (int i = 0; i < modeloTabela.getRowCount(); i++) {
                
                boolean isJaAdicionado = false;
                
                int idProduto = Integer.parseInt(modeloTabela.getValueAt(i, 0).toString());
                int tamanho = Integer.parseInt(modeloTabela.getValueAt(i, 2).toString());
                int qtd = Integer.parseInt(modeloTabela.getValueAt(i, 3).toString());                
                double vlUnit = Double.parseDouble(modeloTabela.getValueAt(i, 4).toString());
                int somaQtd = qtd;

                //VERIFICA SE ESSE PRODUTO ESTÁ DUPLICADO NA LIST
                for(VendaItem item : itensVenda)
                {
                    if(item.getFkProduto() == idProduto && item.getTamanho() == tamanho)
                    {
                        isJaAdicionado = true;
                        item.setQtd(item.getQtd() + qtd);
                        somaQtd = item.getQtd();
                        break;
                    }
                }
                
                ProdutoTamanho prodTamanho = ProdutoTamanhoDAO.consultarByProdutoETamanho(idProduto, tamanho);
                
                if(!isJaAdicionado)
                {
                    VendaItem vendaItem = new VendaItem(idVendaGerado, prodTamanho.getId(), qtd, vlUnit);
                    vendaItem.setTamanho(tamanho);
                    vendaItem.setFkProduto(idProduto);
                    
                    if(prodTamanho.getQuantidade() < vendaItem.getQtd())
                    {
                        var produto = ProdutoDAO.consultarById(idProduto);
                        JOptionPane.showMessageDialog(rootPane, "A quantidade disponível do produto " + produto.getNome() + " é de " + prodTamanho.getQuantidade() + ". Porém você tentou adicionar " + vendaItem.getQtd());
                        return;
                    }
                        
                    itensVenda.add(vendaItem);
                }else{
                    if(prodTamanho.getQuantidade() < somaQtd)
                    {
                        var produto = ProdutoDAO.consultarById(idProduto);
                        JOptionPane.showMessageDialog(rootPane, "A quantidade disponível do produto " + produto.getNome() + " é de " + prodTamanho.getQuantidade() + ". Porém você tentou adicionar " + somaQtd);
                        return;
                    }
                }
                
                
            }
           
           
           for(VendaItem item : itensVenda)
           {
                boolean isVendaItemGerada = VendaItemDAO.adicionar(item);
                if(!isVendaItemGerada){
                   JOptionPane.showMessageDialog(rootPane, "Falha ao gerar itens da venda");
                   return;
                }
         
                ProdutoTamanho prodTamanho = ProdutoTamanhoDAO.consultarByProdutoETamanho(item.getFkProduto(), item.getTamanho());
               
                boolean retorno = ProdutoTamanhoDAO.alterarQtd(prodTamanho.getId(), prodTamanho.getQuantidade() - item.getQtd());
                if(!retorno){
                   JOptionPane.showMessageDialog(rootPane, "Falha ao ajustar estoque");
                   return;
                }
           }
           
           JOptionPane.showMessageDialog(rootPane, "Venda gerada com sucesso!");
           calculoVlFinal();
           modeloTabela.setRowCount(0);
           
       }catch(Exception e)
       {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
       }
       
       
       
       
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnDetalharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalharActionPerformed
        int linhaSelecionada = tblVendas.getSelectedRow();
        
        if(linhaSelecionada >= 0){
            
            DefaultTableModel modeloTabela = (DefaultTableModel) tblVendas.getModel();
            int fkVenda = Integer.parseInt(modeloTabela.getValueAt(linhaSelecionada, 0).toString());
            
            DefaultTableModel modeloTabelaItens = (DefaultTableModel) tblItensRelatorioAnalitico.getModel();
            modeloTabelaItens.setRowCount(0);
            
            var retornoItens = RelatorioAnaliticoDAO.listarItensPedido(fkVenda);
            
            for (RelatorioAnalitico item : retornoItens)
            {
                modeloTabelaItens.addRow(new String[]{
                    String.valueOf(item.getIdItem()),
                    item.getNomeProduto(),       
                    String.valueOf(item.getTamanho()),
                    String.valueOf(item.getQtd()),
                    String.valueOf( item.getTotal())
                });
            }
            
        }else{
            JOptionPane.showMessageDialog(rootPane, "Nenhuma venda foi selecionado");
        }
    }//GEN-LAST:event_btnDetalharActionPerformed
    
    private void calculoVlFinal()
    {
        DefaultTableModel modeloTabela = (DefaultTableModel) tblItensVenda.getModel();
        
        double preco = 0;
        for (int i = 0; i < modeloTabela.getRowCount(); i++) {
            preco += Double.parseDouble(modeloTabela.getValueAt(i, 5).toString());
        }
        
        String vlFinal = setCasasDecimais(preco);
        
        lblValorTotal.setText(vlFinal);
    }
    
    public String setCasasDecimais(double numero)
    {
        DecimalFormat formato = new DecimalFormat("#." + "0".repeat(2));

        // Formatar o número com o formato definido
        String numeroFormatado = formato.format(numero);
        
        numeroFormatado = numeroFormatado.replaceAll(",", ".");
        return numeroFormatado;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarProduto;
    private javax.swing.JButton btnAdicionarProdutoTamanho;
    private javax.swing.JButton btnBuscarCPF;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCancelarProdutoTamanho;
    private javax.swing.JButton btnCarregarProdutos;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnDetalhar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnProcurar;
    private javax.swing.JComboBox<String> cbmTamanhos;
    public javax.swing.JDialog dlgProdutoTamanho;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuCadastrarCliente;
    private javax.swing.JMenuItem jMenuCadastrarProduto;
    private javax.swing.JMenu jMenuClients;
    private javax.swing.JMenu jMenuProdutos;
    private javax.swing.JMenuItem jMenuSair;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JDateChooser jdcDataFinalRelatorio;
    private com.toedter.calendar.JDateChooser jdcDataInicioRelatorio;
    private javax.swing.JLabel lblTotalVendas;
    private javax.swing.JLabel lblValorTotal;
    private javax.swing.JPanel pnlRelatorio;
    private javax.swing.JPanel pnlVenda;
    private javax.swing.JSpinner spnIdProduto;
    private javax.swing.JSpinner spnQtdProdutoTamanho;
    private javax.swing.JTable tblItensRelatorioAnalitico;
    private javax.swing.JTable tblItensVenda;
    private javax.swing.JTable tblVendas;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNomeProduto;
    private javax.swing.JTextField txtProdutoAdicionado;
    private javax.swing.JTextField txtQtdDisponivel;
    // End of variables declaration//GEN-END:variables
}
